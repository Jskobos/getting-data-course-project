a <- available.packages()
head(a,10)
install.packages(c("slidify","ggplot2","devtools"))
library(devtools)
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
search()
a <- NULL
T == T
T == TRUE
isTRUE(3)
xor(FALSE,FALSE)
help(standard deviation)
help("standard deviation"")
clear()
find("standard deviation")
library(help = "stats")
?mean
?deviation
??deviation
?stats::sd
?sd
?gl
library(datasets)
data("iris")
?iris
length(iris)
head(iris$Species)
levels <- "virginica"
tapply(iris, virginica, mean)
tapply(iris, levels, mean)
?tapply
levels <- gl(iris, "virginica")
?gl
?iris
levels(iris)
?apply
apply(iris,"virginica",mean)
apply(iris,[:5],mean)
?split
tapply(iris$Sepal.Length,iris$Species, mean)
rowMeans(iris)
rowMeans(iris,[1:4])
?rowMeans
rowMeans(iris$Sepal.Length)
rowMeans(iris[,1:4])
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
?apply
colMeans(iris[,1:4])
data(mtcars)
?mtcars
levels <- NULL
head(mtcars$mpg)
colMeans(mtcars)
table(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls
n
?debug
ls()
quit
quit
quit
?solve
set.seed(1)
rpois(5,2)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size)
)
fiter(cran, package=="swirl")
filter(cran, package=="swirl")
filter(cran, r_version =="3.1.1", country=="US")
?Comparison
filter(cran, r_version <="3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>100500, r_or=="linux-gnu")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2 <- select(cran(size:ip_id))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size-1000)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
play()
?n
?n_distinct
source('/tmp/RtmpAQ2A7l/summarize1.R')
nxt()
submit()
source('/tmp/RtmpAQ2A7l/summarize1.R')
submit()
pack_sum
quantile(pack)sum$count, probs=0.99)
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
?arrange
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
play()
summarize(by_package, mean(size))
summarize(by_package, avg_size = mean(size))
nxt()
submit()
submit()
submit()
View(result3)
source('/tmp/RtmpAQ2A7l/chain1.R')
submit()
source('/tmp/RtmpAQ2A7l/chain2.R')
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex","class"))
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
?bind_rows
bind_rows(passed,failed)
sat
?separate
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours=10, minutes=16, seconds =0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours=17,minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?i=with_tz
?with_tz
arrive <- with_tz(arrive,tzone="Asia/Hong_Kong")
print(arrive)
last_time <- mdy("June 17,2008", tz="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
source('~/coursera/getting_data/week2/hw_question_2.R')
html <- run()
?split
head(html)
?"httr"
source('~/coursera/getting_data/week2/hw_question_2.R')
html <- run()
class(html)
source('~/coursera/getting_data/week2/hw_question_2.R')
html <- run()
html
source('~/coursera/getting_data/week2/hw_question_2.R')
html <- run()
html
?cat
source('~/coursera/getting_data/week2/hw_question_2.R')
html <- run()
spl <- strsplit(html,"\n")
dim(spl)
spl[40]
spl[[1]]
spl[1]
?strsplit
spl <- strsplit(html,"\n")[[1]]
spl
spl[180]
nchar(spl[10])
nchar(spl[20])
nchar(spl[30])
nchar(spl[100])
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for',destfile="/noaa.for")
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for',destfile="noaa.for")
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for',destfile="noaa.for",method="CURL")
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for',destfile="noaa.for",method="curl")
noaa <- read.fwf('noaa.for')
?read.fwf
noaa <- read.fwf('noaa.for',skips=4,widths=c(9,5,8,5,8,5,8,5,8))
noaa <- read.fwf('noaa.for',skip=4,widths=c(9,5,8,5,8,5,8,5,8))
View(noaa)
noaa <- read.fwf('noaa.for',skip=4,widths=c(9,8,8,8,8))
noaa <- read.fwf('noaa.for',skip=4,widths=c(10,8,8,8,8))
noaa <- read.fwf('noaa.for',skip=4,widths=c(10,5,8,5,8,5,8,5,8))
noaa <- read.fwf('noaa.for',skip=4,widths=c(10,8,8,8,8))
noaa <- read.fwf('noaa.for',skip=4,widths=c(10,7,4,8,8,8))
noaa <- read.fwf('noaa.for',skip=4,widths=c(14,13,13,13,8))
noaa <- read.fwf('noaa.for',skip=4,widths=c(14,13,13,13,10))
noaa <- read.fwf('noaa.for',skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4))
library(dplyr)
tbl <- tbl_df(noaa)
col4 <- select(tbl_df,V4)
col4 <- select(tbl,V4)
View(col4)
result <- summarize(col4,sum)
result <- summarize(col4,res=sum())
result <- summarize(col4,res=sum)
?summarize
result <- summarize(col4,sum(V4))
result
setwd("~/coursera/getting_data/week3/")
if (!file.exists('./data')) { dir.create('./data') }
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv',destfile="./data/community.csv",method="curl")
comdata <- read.csv("./data/community.csv")
library(dplyr)
agricultureLogical <- comdata[comdata$ACR == 3 & comdata$AGS == 6,]
agricultureLogical <- comdata$ACR == 3 & comdata$AGS == 6
res <- which(comdata,agricultureLogical == TRUE)
res <- which(agricultureLogical)
head(res, n=3)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg',destfile="./data/instructor.jpg",method="curl")
library(jpeg)
install.packages('jpeg')
library(jpeg)
?jpeg
ls(package:jpeg)
??jpeg
image <- readJPEG('./data/instructor.jpg',native=TRUE)
q <- quantile(0.3,0.7)
q <- quantile(image, 0.3,0.7)
?quantile
q <- quantile(image, probs=c(0.3,0.7))
q
q <- quantile(image, probs=c(0.3,0.8))
q
str(image)
-15258512 - 638
-15258512 + 638
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv',destfile="./data/gdp.csv",method="curl")
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv',destfile="./data/edu.csv",method="curl")
gdp <- read.csv('./data/gdp.csv')
edu <- read.csv('./data/edu.csv')
names(gdp)
names(edu)
intersect(gdp$names,edu$names)
head(gdp)
gdp.merged <- merge(gdp,edu,by.x="X",by.y="CountryCode",all=TRUE)
gdp.merged <- merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
names(gdp.merged)
head(gdp.merged$Gross.domestic.product.2012)
ngdp <- arrange(gdp.merged,Gross.domestic.product.2012)
tail(ngdp, n=1)
ngdp <- arrange(gdp.merged,desc(Gross.domestic.product.2012))
tail(ngdp, n=1)
tail(ngdp$X, n=1)
??"dplyr"
data <- tbl_df(gdp.merged)
data.sorted <- arrange(data,desc(Gross.domestic.product.2012))
tail(data.sorted,n=1)
tail(data.sorted$X,n-10)
tail(data.sorted$X,n=10)
View(data)
data.sorted <- arrange(data,Gross.domestic.product.2012)
View(data.sorted)
mutate(data,gdp=as.numeric(Gross.domestic.product.2012))
data.1 <- mutate(data,gdp=as.numeric(Gross.domestic.product.2012))
View(data.1)
data.2 <- arrange(data.1,gdp)
View(data.2)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
?as.numeric
source('~/coursera/getting_data/week3/hw_3.R')
?as.numeric
sort_by_gdp(data)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp(data)
?arrange
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp(data)
View(x)
x[x$name == "United States",$gdp]
x[x$name == "United States",gdp]
x[x$name == "United States",]
test <- x[x$name=="United States"]
class(test$gdp)
test$gdp
test
test <- x[x$name=="United States",]
test$gdp
class(test$gdp)
?sort
?order
data.newsort <- data[order(data$Gross.domestic.product.2012,decreasing=TRUE,na.last=TRUE)]
View(data.newsort)
data.newsort <- data[order(data$Gross.domestic.product.2012,decreasing=TRUE,na.last=TRUE),]
View(data.newsort)
source('~/coursera/getting_data/week3/hw_3.R')
View(gdp)
f <- gdp$Gross.domestic.product.2012
f <- as.numeric(levels(f)[f])
View(f)
f <- as.numeric(levels(f)[f],rm.na=TRUE)
?as.numeric
NA > 0
NA == TRUE
gdp.nona <- gdp[!is.na(as.numeric(levels(gdp$Gross.domestic.product.2012)[gdp$Gross.domestic.product.2012])),]
View(gdp.nona)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp()
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp()
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp()
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
sort_by_gdp()
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
?summarize
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
source('~/coursera/getting_data/week3/hw_3.R')
x <- sort_by_gdp()
View(x)
source('~/coursera/getting_data/week3/hw_3.R')
source('~/coursera/getting_data/week3/hw_3.R')
source('~/coursera/getting_data/week3/hw_3.R')
install.packages('HMisc')
install.packages('Hmisc')
source('~/coursera/getting_data/week3/hw_3.R')
source('~/coursera/getting_data/week3/hw_3.R')
source('~/coursera/getting_data/week3/hw_3.R')
table_vs_income_group()
y <- table_vs_income_group()
View(y)
setwd('~/coursera/getting_data/course_project/')
ls('./project_data/')
